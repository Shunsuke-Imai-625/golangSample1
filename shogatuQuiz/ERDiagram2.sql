SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS ANSWER_TABLE;
DROP TABLE IF EXISTS QUIZ_MANAGE;
DROP TABLE IF EXISTS QUESTION_MANAGE_TABLE;
DROP TABLE IF EXISTS QUIZ_TABLE;
DROP TABLE IF EXISTS GENRE_TABLE;
DROP TABLE IF EXISTS POINT_TABLE;
DROP TABLE IF EXISTS QUIZ_NUMBER;
DROP TABLE IF EXISTS TEAM_TABLE;




/* Create Tables */

CREATE TABLE ANSWER_TABLE
(
	ID int NOT NULL,
	QUIZ_NUMBER int NOT NULL,
	TEAM_ID int NOT NULL,
	GANRE_ID int,
	POINT_ID int,
	ANSWER char(255),
	NOW_POINT int,
	CORRECT_FLAG int COMMENT '正解が0
不正解が1',
	QUESTION_ID int NOT NULL,
	ID int NOT NULL,
	PRIMARY KEY (ID, QUIZ_NUMBER, TEAM_ID)
);


CREATE TABLE GENRE_TABLE
(
	GENRE_ID int NOT NULL,
	GENRE_NAME char(100),
	PRIMARY KEY (GENRE_ID)
);


CREATE TABLE POINT_TABLE
(
	POINT_ID int NOT NULL,
	POINT int,
	PRIMARY KEY (POINT_ID)
);


CREATE TABLE QUESTION_MANAGE_TABLE
(
	REMAIN_NUMBER int NOT NULL,
	ID int NOT NULL,
	QUESTION_ID int NOT NULL,
	ID int NOT NULL,
	PRIMARY KEY (ID, QUESTION_ID, ID)
);


CREATE TABLE QUIZ_MANAGE
(
	ID int NOT NULL,
	QUIZ_NUMBER int NOT NULL,
	CORRECT_TEAM_ID_1 int,
	CORRECT_TEAM_ID_2 int,
	CORRECT_TEAM_ID_3 int,
	CORRECT_TEAM_ID_4 int,
	CORRECT_TEAM_ID_5 int,
	LOSER_ID int COMMENT '逆転クイズの敗者',
	GENRE_ID int NOT NULL,
	POINT_ID int NOT NULL,
	QUESTION_ID int NOT NULL,
	ID int NOT NULL,
	PRIMARY KEY (ID, QUIZ_NUMBER)
);


CREATE TABLE QUIZ_NUMBER
(
	ID int NOT NULL COMMENT '大会の識別番号',
	QUIZ_NUMBER int NOT NULL COMMENT '現在の問題数',
	PRIMARY KEY (ID)
);


CREATE TABLE QUIZ_TABLE
(
	QUESTION_ID int NOT NULL,
	QUESTION_NUMBER int,
	GENRE_ID int NOT NULL,
	POINT_ID int NOT NULL,
	ID int NOT NULL,
	REMAIN_QUESTION_NUMBER int COMMENT '残りの問題数',
	PRIMARY KEY (QUESTION_ID, ID)
);


CREATE TABLE TEAM_TABLE
(
	TEAM_ID int NOT NULL,
	TEAM_NAME char(100),
	PRIMARY KEY (TEAM_ID)
);



/* Create Foreign Keys */

ALTER TABLE ANSWER_TABLE
	ADD FOREIGN KEY (GANRE_ID)
	REFERENCES GENRE_TABLE (GENRE_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (GENRE_ID)
	REFERENCES GENRE_TABLE (GENRE_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_TABLE
	ADD FOREIGN KEY (GENRE_ID)
	REFERENCES GENRE_TABLE (GENRE_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ANSWER_TABLE
	ADD FOREIGN KEY (POINT_ID)
	REFERENCES POINT_TABLE (POINT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (POINT_ID)
	REFERENCES POINT_TABLE (POINT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_TABLE
	ADD FOREIGN KEY (POINT_ID)
	REFERENCES POINT_TABLE (POINT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ANSWER_TABLE
	ADD FOREIGN KEY (QUESTION_ID, ID)
	REFERENCES QUIZ_TABLE (QUESTION_ID, ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUESTION_MANAGE_TABLE
	ADD FOREIGN KEY (QUESTION_ID, ID)
	REFERENCES QUIZ_TABLE (QUESTION_ID, ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (QUESTION_ID, ID)
	REFERENCES QUIZ_TABLE (QUESTION_ID, ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (CORRECT_TEAM_ID_2)
	REFERENCES TEAM_TABLE (TEAM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (CORRECT_TEAM_ID_4)
	REFERENCES TEAM_TABLE (TEAM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (CORRECT_TEAM_ID_5)
	REFERENCES TEAM_TABLE (TEAM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (LOSER_ID)
	REFERENCES TEAM_TABLE (TEAM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (CORRECT_TEAM_ID_1)
	REFERENCES TEAM_TABLE (TEAM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE QUIZ_MANAGE
	ADD FOREIGN KEY (CORRECT_TEAM_ID_3)
	REFERENCES TEAM_TABLE (TEAM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



